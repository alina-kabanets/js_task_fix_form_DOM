{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,IAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EADS,SAAS,gBAAgB,CAAC,W,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,IAGzC,SAAS,EAAe,CAAM,EAC5B,OAAO,EAEJ,OAAO,CAAC,WAAY,OAEpB,OAAO,CAAC,KAAM,SAAS,CAAG,EACzB,OAAO,EAAI,WAAW,EACxB,EACJ,CAEK,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,I,EAAK,EAAA,EAAe,CAAA,CAAA,OAAA,QAAA,CAAA,GAAf,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAA0B,CAA1B,IAAM,EAAN,EAAA,KAAA,CACG,EAAQ,SAAS,aAAa,CAAC,QAErC,CAAA,EAAM,SAAS,CAAI,cACnB,EAAM,OAAO,CAAG,EAAM,EAAE,CACxB,EAAM,WAAW,CAAG,EAAe,EAAM,IAAI,EAE7C,IAAM,EAAc,EAAe,EAAM,IAAI,EAE7C,EAAM,YAAY,CAAC,cAAe,GAElC,EAAM,aAAa,CAAC,OAAO,CAAC,EAC9B,C,C,M,E,CAZK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar inputs = document.querySelectorAll(\"input\");\nvar inputsArr = _to_consumable_array(inputs);\nfunction getCapitalized(string) {\n    return string// insert a space before all caps\n    .replace(/([A-Z])/g, \" $1\")// uppercase the first character\n    .replace(/^./, function(str) {\n        return str.toUpperCase();\n    });\n}\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = inputsArr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var input = _step.value;\n        var label = document.createElement(\"label\");\n        label.className = \"field-label\";\n        label.htmlFor = input.id;\n        label.textContent = getCapitalized(input.name);\n        var placeholder = getCapitalized(input.name);\n        input.setAttribute(\"placeholder\", placeholder);\n        input.parentElement.prepend(label);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\n\n//# sourceMappingURL=index.a511ea42.js.map\n","'use strict';\n\nconst inputs = document.querySelectorAll('input');\nconst inputsArr = [...inputs];\n\nfunction getCapitalized(string) {\n  return string\n  // insert a space before all caps\n    .replace(/([A-Z])/g, ' $1')\n  // uppercase the first character\n    .replace(/^./, function(str) {\n      return str.toUpperCase();\n    });\n}\n\nfor (const input of inputsArr) {\n  const label = document.createElement('label');\n\n  label.className = `field-label`;\n  label.htmlFor = input.id;\n  label.textContent = getCapitalized(input.name);\n\n  const placeholder = getCapitalized(input.name);\n\n  input.setAttribute('placeholder', placeholder);\n\n  input.parentElement.prepend(label);\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","inputsArr","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","getCapitalized","string","replace","str","toUpperCase","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","input","value","label","createElement","className","htmlFor","id","textContent","placeholder","setAttribute","parentElement","prepend","err","return"],"version":3,"file":"index.a511ea42.js.map"}